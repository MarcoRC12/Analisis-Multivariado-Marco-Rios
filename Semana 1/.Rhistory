table(cambio$cambio)
resultados2014 = read_delim( "C:/Users/marco/Desktop/7 mo ciclo/Analisis multiariado/Clase 1 - 03 22/resultados2014.csv", ",",
escape_double = FALSE, trim_ws=TRUE)
resultados2014 = read_delim( "C:\Users\marco\OneDrive - Universidad Peruana Unión\Escritorio\7 mo ciclo\Analisis multiariado\GIT\Semana 1\resultados2014.csv", ",",
resultados2014 = read_delim( "C:/Users/marco/OneDrive - Universidad Peruana Unión/Escritorio/7 mo ciclo/Analisis multiariado/GIT/Semana 1/resultados2014.csv", ",",
escape_double = FALSE, trim_ws=TRUE)
resultados2014 = read_delim( "C:/Users/marco/OneDrive - Universidad Peruana Unión/Escritorio/7 mo ciclo/Analisis multiariado/GIT/Semana 1/resultados2014.csv", ",",
escape_double = FALSE, trim_ws=TRUE)
library(ggplot2)
install.packages("corrplot")
library(swaRm)
library(readr)
library(tidyr)
library(readxl)
library(stringr)
resultados2014 = read_delim( "C:/Users/marco/OneDrive - Universidad Peruana Unión/Escritorio/7 mo ciclo/Analisis multiariado/GIT/Semana 1/resultados2014.csv", ",",
escape_double = FALSE, trim_ws=TRUE)
resultados2018 = read_delim( "C:/Users/marco/OneDrive - Universidad Peruana Unión/Escritorio/7 mo ciclo/Analisis multiariado/GIT/Semana 1/resultados2018.csv", ",",
escape_double = FALSE, trim_ws=TRUE)
table(cambio$cambio)
table(cambio$cambio)
cambio = winner2018%>%
left_join(winner2014, by="codigo")%>%
mutate(cambio=ifelse(partido18==partido14,"sin
cambio", "cambio"),
robo=ifelse(cambio=="cambio",
paste(partido18, partido14, sep=" al "), "sin
cambio"))
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
por_resultados2014 = votos_porcentaje(resultados2014)
por_resultados2014 = votos_porcentaje(resultados2014)
head(resultados2014,5)
head(resultados2018,5)
dim()
dim(resultados2014)
dim(resultados2018)
names(resultados2014)
names(resultados2018)
pase18 = names(resultados2018)[names(resultados2018) == 'votos1']
partidos_nombre = c('pase18', 'pac18', 'adc18', 'pt18', 'fa18', 'pin18',
'pln18', 'pml18', 'png18', 'prc18', 'prsc18', 'prn18', 'pusc18')
pase18 = names(resultados2018)[names(resultados2018) == 'votos1']
partidos_nombre = c('pase18', 'pac18', 'adc18', 'pt18', 'fa18', 'pin18',
'pln18', 'pml18', 'png18', 'prc18', 'prsc18', 'prn18', 'pusc18')
cam_nombre = function(dataframe)
{
for (i in 1:length(partidos_nombre))
{
names(dataframe)[names(dataframe)
==
paste0('votos', i)] = partidos_nombre[i]
}
return(dataframe)
}
resultados2018=cam_nombre(resultados2018)
por_resultados2014 = votos_porcentaje(resultados2014)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
View(votos_porcentaje)
por_resultados2014 = votos_porcentaje(resultados2014)
por_resultados2014 = votos_porcentaje(resultados2014)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
por_resultados2014 = votos_porcentaje(resultados2014)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(votos_validos)
return(x)
}
por_resultados2014 = votos_porcentaje(resultados2014)
View(resultados2014)
por_resultados2018 = votos_porcentaje(resultados2018)
View(votos_porcentaje)
View(votos_porcentaje)
View(votos_porcentaje)
View(votos_porcentaje)
View(votos_porcentaje)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
por_resultados2014 = votos_porcentaje(resultados2014)
por_resultados2018 = votos_porcentaje(resultados2018)
winner = function(dataframe, periodo){
x = dataframe%>%
gather(partido, votos, -codigo) %>%
group_by(codigo)%>%
filter(votos==max(votos))%>%
separate(partido, c(paste0("partido", periodo)),
sep="1")%>%
select(-votos)
return(x)
}
#//ejecutar partido ganador por zona
winner2014=winner(por_resultados2014, 14)
install.packages("beeswarm")
library(beeswarm)
#//ejecutar partido ganador por zona
winner2014=winner(por_resultados2014, 14)
#//Ejecutar CALCULAR PORCENTAJE
por_resultados2014 = votos_porcentaje(resultados2014)
por_resultados2018 = votos_porcentaje(resultados2018)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(votos_validos)
return(x)
}
#//Ejecutar CALCULAR PORCENTAJE
por_resultados2014 = votos_porcentaje(resultados2014)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
library(dplyr)
votos_porcentaje= function(dataframe){
x=dataframe%>%
group_by(codigo)%>%
mutate_all(funs((. / votos_validos)*100))%>%
select(-votos_validos)
return(x)
}
#//Ejecutar CALCULAR PORCENTAJE
por_resultados2014 = votos_porcentaje(resultados2014)
por_resultados2018 = votos_porcentaje(resultados2018)
winner = function(dataframe, periodo){
x = dataframe%>%
gather(partido, votos, -codigo) %>%
group_by(codigo)%>%
filter(votos==max(votos))%>%
separate(partido, c(paste0("partido", periodo)),
sep="1")%>%
select(-votos)
return(x)
}
winner2014=winner(por_resultados2014, 14)
winner2018 =winner(por_resultados2018, 18)
cambio = winner2018%>%
left_join(winner2014, by="codigo")%>%
mutate(cambio=ifelse(partido18==partido14,"sin
cambio", "cambio"),
robo=ifelse(cambio=="cambio",
paste(partido18, partido14, sep=" al "), "sin
cambio"))
#¿Cómo cambió la distribución de los cantones ganados por cada
#partido político en comparación con las elecciones de 2014?
table(cambio$cambio)
winner2018 =winner(por_resultados2018, 18)
#¿En qué cantones logró el Partido Restauración Nacional
#(PRN) superar a los demás partidos políticos?
table(cambio$robo)
grafico_votos = function(partido, color){
x = por_resultados2018%>%
select(codigo, paste0(partido,18))%>%
left_join(
(por_resultados2014%>%
select(codigo, paste0(partido,14))),
by="codigo")%>%
gather(anio, votos, - codigo)%>%
mutate(anio=ifelse(anio==paste0(partido,14), 2014, 2018))
par(las=1, bty="l", family="mono", font=1, bg="transparent")
return(
beeswarm(votos ~ anio, data=x, col=color, pch=16, method="hex",
cex=0.8, horizontal=TRUE, ylab="", xlab=paste("Porcentaje de
votos del", toupper(partido)),
main=paste("Porcentaje de votos del", toupper(partido)),
xlim=c(0, 60))
)
}
grafico_votos("pac", "#BE0000")
cantones= resultados2018%>%
filter(codigo==101 | codigo==103
|codigo==119|codigo==201|codigo==210|codigo==301)
sum(cantones$votos_validos)/sum(resultados2018$votos_validos)*100
por_resultados2018%>%
filter(codigo==101 | codigo==103
|codigo==119|codigo==201|codigo==210|codigo==301)%>%
gather(partido, votos, -codigo)%>%
group_by(codigo)%>%
filter(votos==max(votos))
